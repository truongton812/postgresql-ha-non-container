scope: postgres
namespace: /db/
name: {{ inventory_hostname }}

restapi:
    listen: 0.0.0.0:8008
    connect_address: {{ ansible_host }}:8008

etcd3:
    hosts: {{ etcd_cluster_connect }}
    protocol: https
    cacert: /etc/etcd/ca.pem
    cert: /etc/etcd/{{ inventory_hostname }}.pem
    key: /etc/etcd/{{ inventory_hostname }}-key.pem


bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        wal_keep_segments: 10
        max_wal_senders: 5
        max_replication_slots: 10
        wal_log_hints: "on"
        logging_collector: 'on'
        max_wal_size: '10GB'
        archive_mode: "on"
        archive_timeout: 600s
        ssl: true
        ssl_cert_file: /etc/patroni/ssl/server.crt
        ssl_key_file: /etc/patroni/ssl/server.key
  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication replicator 127.0.0.1/32 md5
  {% for host in groups['servers'] %}
- host replication replicator {{ hostvars[host].ansible_host }}/0 md5
  {% endfor -%}

  - host all all 0.0.0.0/0 md5

  users:
    admin:
      password: {{ password_patroni }}
      options:
        - createrole
        - createdb

postgresql:
  listen: 0.0.0.0:5432
  connect_address: {{ inventory_hostname }}:5432
  data_dir: /data/patroni
  bin_dir: /usr/lib/postgresql/17/bin
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: {{ password_relp }}
    superuser:
      username: postgres
      password: {{ password_super }}
  parameters:
      unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
log:
   type: json
   format:
      - message
      - module
      - asctime: '@timestamp'
      - levelname: DEBUG
   static_fields:
      app: patroni